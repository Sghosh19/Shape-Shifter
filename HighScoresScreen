import React, { useState, useEffect } from 'react';
import { GameScore } from '@/entities/GameScore';

export default function HighScoresScreen({ onBack }) {
  const [scores, setScores] = useState([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const loadScores = async () => {
      try {
        const topScores = await GameScore.list('-score', 10);
        setScores(topScores);
      } catch (error) {
        console.error('Error loading high scores:', error);
      }
      setIsLoading(false);
    };

    loadScores();
  }, []);

  return (
    <div className="flex flex-col min-h-screen bg-gradient-to-b from-gray-900 via-black to-purple-900 px-4 py-8">
      {/* Header */}
      <div className="flex items-center justify-between mb-8">
        <button
          onClick={onBack}
          className="text-cyan-400 hover:text-cyan-300 text-lg flex items-center gap-2"
        >
          ‚Üê Back
        </button>
        <h1 className="text-3xl font-bold text-transparent bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text">
          High Scores
        </h1>
        <div className="w-16" /> {/* Spacer */}
      </div>

      {/* Scores List */}
      <div className="flex-1 max-w-2xl mx-auto w-full">
        {isLoading ? (
          <div className="text-center text-gray-400 mt-12">
            <div className="animate-spin w-8 h-8 border-2 border-cyan-400 border-t-transparent rounded-full mx-auto mb-4" />
            Loading scores...
          </div>
        ) : scores.length === 0 ? (
          <div className="text-center text-gray-400 mt-12">
            <div className="text-6xl mb-4">üéÆ</div>
            <h3 className="text-xl mb-2">No scores yet!</h3>
            <p>Be the first to set a high score in Shape Shifter.</p>
          </div>
        ) : (
          <div className="space-y-3">
            {scores.map((score, index) => (
              <div
                key={score.id}
                className={`
                  bg-black bg-opacity-50 border rounded-lg p-4 transition-all duration-200
                  ${index === 0 ? 'border-yellow-400 bg-gradient-to-r from-yellow-900/20 to-orange-900/20' :
                    index === 1 ? 'border-gray-300 bg-gradient-to-r from-gray-800/20 to-gray-700/20' :
                    index === 2 ? 'border-orange-600 bg-gradient-to-r from-orange-900/20 to-red-900/20' :
                    'border-gray-600 hover:border-gray-500'
                  }
                `}
 
