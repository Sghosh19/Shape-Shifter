
import React, { useState, useEffect } from 'react';
import { User } from '@/entities/User';

export default function SettingsScreen({ onBack }) {
  const [settings, setSettings] = useState({
    colorBlindMode: false,
    reducedMotion: false,
    soundEnabled: true,
    difficulty: 'normal'
  });
  
  const [user, setUser] = useState(null);

  useEffect(() => {
    const loadUserSettings = async () => {
      try {
        const currentUser = await User.me();
        setUser(currentUser);
        if (currentUser.game_settings) {
          setSettings(prevSettings => ({ ...prevSettings, ...currentUser.game_settings }));
        }
      } catch (error) {
        console.error('Error loading user settings:', error);
      }
    };

    loadUserSettings();
  }, []);

  const handleSettingChange = async (key, value) => {
    const newSettings = { ...settings, [key]: value };
    setSettings(newSettings);

    if (user) {
      try {
        await User.updateMyUserData({
          game_settings: newSettings
        });
      } catch (error) {
        console.error('Error saving settings:', error);
      }
    }
  };

  const ToggleSwitch = ({ enabled, onChange, label, description }) => (
    <div className="flex items-center justify-between py-3">
      <div className="flex-1">
        <div className="text-white font-medium">{label}</div>
        <div className="text-sm text-gray-400">{description}</div>
      </div>
      <button
        onClick={() => onChange(!enabled)}
        className={`
          relative inline-flex h-6 w-11 items-center rounded-full transition-colors duration-200
          ${enabled ? 'bg-cyan-500' : 'bg-gray-600'}
        `}
      >
        <span
          className={`
            inline-block h-4 w-4 transform rounded-full bg-white transition-transform duration-200
            ${enabled ? 'translate-x-6' : 'translate-x-1'}
          `}
 
